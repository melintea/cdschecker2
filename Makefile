include common.mk

SPEC_DIR := spec-analysis
SCFENCE_DIR := scfence

OBJECTS := libthreads.o schedule.o model.o threads.o librace.o action.o \
	   nodestack.o clockvector.o main.o snapshot-interface.o cyclegraph.o \
	   datarace.o impatomic.o cmodelint.o \
	   snapshot.o malloc.o mymemory.o common.o mutex.o promise.o conditionvariable.o \
	   context.o scanalysis.o execution.o plugins.o libannotate.o

include $(SPEC_DIR)/Makefile
include $(SCFENCE_DIR)/Makefile
#$(info $$OBJECTS = $(OBJECTS))

# Replace all the basename with 
ALL_DEPS := $(shell echo $(OBJECTS) | sed -E 's/([^ ]*\/)?([^\/ ]*)/\1\.\2.d/g')
#-include $(ALL_DEPS)
#$(info $$ALL_DEPS = $(ALL_DEPS))

CPPFLAGS += -Iinclude -I. -I$(SPEC_DIR) -I$(SCFENCE_DIR) $(LIBBACKTRACE_INCLUDE)
LDFLAGS := -ldl -lrt -rdynamic
SHARED := -shared

# Mac OSX options
ifeq ($(UNAME), Darwin)
LDFLAGS := -ldl
SHARED := -Wl,-undefined,dynamic_lookup -dynamiclib
endif

TESTS_DIR := test

MARKDOWN := doc/Markdown/Markdown.pl

all: $(LIB_SO) tests README.html

debug: CPPFLAGS += -DCONFIG_DEBUG
debug: all

PHONY += docs
docs: *.c *.cc *.h README.html
	doxygen

README.html: README.md
	$(MARKDOWN) $< > $@


malloc.o: malloc.c
	$(CC) -fPIC -c malloc.c -DMSPACES -DONLY_MSPACES -DHAVE_MMAP=0 $(CFLAGS) -Wno-unused-variable

%.o : %.cc
	$(CXX) -MMD -MF $(dir $@).$(notdir $@).d -fPIC -c $< -o $@ $(CPPFLAGS)

$(LIB_SO): $(OBJECTS)
	$(CXX) $(SHARED) -o $(LIB_SO) $+ $(LDFLAGS)

%.pdf: %.dot
	dot -Tpdf $< -o $@

PHONY += clean
clean:
	rm -f *.o *.so $(ALL_DEPS) *.pdf *.dot $(OBJECTS)
	$(MAKE) -C $(TESTS_DIR) clean

PHONY += mrclean
mrclean: clean
	rm -rf docs

PHONY += tags
tags:
	ctags -R

PHONY += tests
tests: $(LIB_SO)
	$(MAKE) -C $(TESTS_DIR)

BENCH_DIR := benchmarks

PHONY += benchmarks
benchmarks: $(LIB_SO)
	@if ! test -d $(BENCH_DIR); then \
		echo "Directory $(BENCH_DIR) does not exist" && \
		echo "Please clone the benchmarks repository" && \
		echo && \
		exit 1; \
	fi
	$(MAKE) -C $(BENCH_DIR)

PHONY += pdfs
pdfs: $(patsubst %.dot,%.pdf,$(wildcard *.dot))

.PHONY: $(PHONY)

# A 1-inch margin PDF generated by 'pandoc'
%.pdf: %.md
	pandoc -o $@ $< -V header-includes='\usepackage[margin=1in]{geometry}'
